plugins {
	id("org.jetbrains.kotlin.jvm") version "1.9.23"
	id("org.jetbrains.kotlin.plugin.allopen") version "1.9.23"
	id("com.google.devtools.ksp") version "1.9.23-1.0.19"
	id("com.github.johnrengelman.shadow") version "8.1.1"
	id("io.micronaut.application") version "4.4.2"
	id("io.micronaut.openapi") version "4.4.2"
	id("io.micronaut.aot") version "4.4.2"
	id("java")
	id("maven-publish")
}

version = "1.1"
group = "io.gray"

repositories {
	mavenCentral()
}
afterEvaluate {
	tasks.getByName("publishGprPublicationToGitHubPackagesRepository").dependsOn(tasks.test)
}
publishing {
  repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/jgray1206/light-the-lamp")
            credentials {
                username = System.getenv("GITHUB_USERNAME")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
			artifact shadowJar
        }
    }
}

dependencies {
	ksp("io.micronaut.data:micronaut-data-processor")
	ksp("io.micronaut:micronaut-http-validation")
	ksp("io.micronaut.validation:micronaut-validation-processor")
	ksp("io.micronaut.security:micronaut-security-annotations")
	ksp("io.micronaut.openapi:micronaut-openapi")

	// https://mvnrepository.com/artifact/org.mindrot/jbcrypt
	implementation("org.mindrot:jbcrypt:0.4")
	implementation("io.micronaut:micronaut-http-client")
	implementation("io.micronaut:micronaut-jackson-databind")
	implementation("io.micronaut.data:micronaut-data-jdbc")
	implementation("io.micronaut.data:micronaut-data-r2dbc")
	implementation("io.micronaut.flyway:micronaut-flyway")
	runtimeOnly("org.flywaydb:flyway-database-postgresql")
	implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
	implementation("io.micronaut.security:micronaut-security-jwt")
	implementation("jakarta.annotation:jakarta.annotation-api")
	implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
	implementation("io.micronaut.validation:micronaut-validation")
	runtimeOnly("ch.qos.logback:logback-classic")
	runtimeOnly("io.micronaut.sql:micronaut-jdbc-hikari")
	runtimeOnly("org.yaml:snakeyaml")

	//db drivers
	runtimeOnly("org.postgresql:r2dbc-postgresql")
	runtimeOnly("io.r2dbc:r2dbc-pool")
	runtimeOnly("org.postgresql:postgresql")

	//for emailing
	implementation 'com.sun.mail:jakarta.mail:2.0.1'
	implementation 'com.google.api-client:google-api-client:2.6.0'
	implementation 'com.google.oauth-client:google-oauth-client-jetty:1.36.0'
	implementation 'com.google.apis:google-api-services-gmail:v1-rev20220404-2.0.0'

	// https://mvnrepository.com/artifact/io.github.resilience4j/resilience4j-micronaut
	implementation("io.github.resilience4j:resilience4j-micronaut:${resilience4jVersion}")
	implementation("io.github.resilience4j:resilience4j-ratelimiter:${resilience4jVersion}")
	implementation("io.github.resilience4j:resilience4j-consumer:${resilience4jVersion}")
	implementation("io.github.resilience4j:resilience4j-reactor:${resilience4jVersion}")

	runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")
	testRuntimeOnly("io.r2dbc:r2dbc-h2")
	testRuntimeOnly("com.h2database:h2")
	testImplementation("org.assertj:assertj-core")
}

run {
	systemProperties([
			'micronaut.environments': 'local'
	])
}

application {
	mainClass.set("io.gray.ApplicationKt")
}
java {
	sourceCompatibility = JavaVersion.toVersion("17")
	targetCompatibility = JavaVersion.toVersion("17")
}

tasks {
	compileKotlin {
		compilerOptions {
			jvmTarget = org.jetbrains.kotlin.gradle.dsl.JvmTarget.JVM_17
		}
	}
	compileTestKotlin {
		compilerOptions {
			jvmTarget = org.jetbrains.kotlin.gradle.dsl.JvmTarget.JVM_17
		}
	}
}
graalvmNative.toolchainDetection = false
micronaut {
	runtime("netty")
	testRuntime("junit5")
	processing {
		incremental(true)
		annotations("io.gray.*")
	}
	aot {
		// Please review carefully the optimizations enabled below
		// Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
		optimizeServiceLoading = false
		convertYamlToJava = false
		precomputeOperations = true
		cacheEnvironment = true
		optimizeClassLoading = true
		deduceEnvironment = true
		optimizeNetty = true
	}
}
